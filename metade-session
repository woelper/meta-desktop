#!/usr/bin/env python
import os
import json
import subprocess
import time
import logging

HOME = os.path.expanduser('~')
RLOG = os.path.join('/var/log', 'metade.log')
ULOG = os.path.join(HOME, 'metade.log')

try:
    logging.basicConfig(filename=RLOG,level=logging.DEBUG)
except IOError:
    logging.basicConfig(filename=ULOG,level=logging.DEBUG)

def load_config():
    conffile = os.path.join(HOME, '.metade.conf')
    with open(conffile) as config_file:
        config = json.load(config_file)
    return config

def exec_startup():
    for item, binary in configuration.iteritems():
        if binary is not None:
            binary = binary.split()
            try:
                subprocess.Popen(binary)
                logging.info('starting ' + str(binary))
            except: # This is intentionally broad
                logging.warning('failed to run ' + str(binary))

configuration = load_config()
exec_startup()

while True:
    time.sleep(30)
